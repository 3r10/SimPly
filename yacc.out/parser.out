Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> code
Rule 1     code -> line NEWLINE
Rule 2     code -> code line NEWLINE
Rule 3     line -> statement
Rule 4     line -> while
Rule 5     line -> if
Rule 6     line -> elif
Rule 7     line -> else
Rule 8     line -> comment
Rule 9     line -> TAB line
Rule 10    statement -> ID EQUALS expression
Rule 11    expression -> ID
Rule 12    expression -> INTEGER_CONST
Rule 13    expression -> TRUE
Rule 14    expression -> FALSE
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression TIMES expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> expression MODULO expression
Rule 20    expression -> expression LT expression
Rule 21    expression -> expression GT expression
Rule 22    expression -> expression LE expression
Rule 23    expression -> expression GE expression
Rule 24    expression -> expression EQ expression
Rule 25    expression -> expression NE expression
Rule 26    expression -> expression OR expression
Rule 27    expression -> expression AND expression
Rule 28    expression -> NOT expression
Rule 29    expression -> LPAREN expression RPAREN
Rule 30    while -> WHILE expression COLON
Rule 31    if -> IF expression COLON
Rule 32    elif -> ELIF expression COLON
Rule 33    else -> ELSE COLON
Rule 34    comment -> COMMENT

Terminals, with rules where they appear

AND                  : 27
COLON                : 30 31 32 33
COMMENT              : 34
DIVIDE               : 18
ELIF                 : 32
ELSE                 : 33
EQ                   : 24
EQUALS               : 10
FALSE                : 14
GE                   : 23
GT                   : 21
ID                   : 10 11
IF                   : 31
INTEGER_CONST        : 12
LE                   : 22
LPAREN               : 29
LT                   : 20
MINUS                : 16
MODULO               : 19
NE                   : 25
NEWLINE              : 1 2
NOT                  : 28
OR                   : 26
PLUS                 : 15
RPAREN               : 29
TAB                  : 9
TIMES                : 17
TRUE                 : 13
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

code                 : 2 0
comment              : 8
elif                 : 6
else                 : 7
expression           : 10 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 29 30 31 32
if                   : 5
line                 : 1 2 9
statement            : 3
while                : 4

Parsing method: LALR

state 0

    (0) S' -> . code
    (1) code -> . line NEWLINE
    (2) code -> . code line NEWLINE
    (3) line -> . statement
    (4) line -> . while
    (5) line -> . if
    (6) line -> . elif
    (7) line -> . else
    (8) line -> . comment
    (9) line -> . TAB line
    (10) statement -> . ID EQUALS expression
    (30) while -> . WHILE expression COLON
    (31) if -> . IF expression COLON
    (32) elif -> . ELIF expression COLON
    (33) else -> . ELSE COLON
    (34) comment -> . COMMENT

    TAB             shift and go to state 9
    ID              shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ELIF            shift and go to state 13
    ELSE            shift and go to state 14
    COMMENT         shift and go to state 15

    code                           shift and go to state 1
    line                           shift and go to state 2
    statement                      shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5
    elif                           shift and go to state 6
    else                           shift and go to state 7
    comment                        shift and go to state 8

state 1

    (0) S' -> code .
    (2) code -> code . line NEWLINE
    (3) line -> . statement
    (4) line -> . while
    (5) line -> . if
    (6) line -> . elif
    (7) line -> . else
    (8) line -> . comment
    (9) line -> . TAB line
    (10) statement -> . ID EQUALS expression
    (30) while -> . WHILE expression COLON
    (31) if -> . IF expression COLON
    (32) elif -> . ELIF expression COLON
    (33) else -> . ELSE COLON
    (34) comment -> . COMMENT

    TAB             shift and go to state 9
    ID              shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ELIF            shift and go to state 13
    ELSE            shift and go to state 14
    COMMENT         shift and go to state 15

    line                           shift and go to state 16
    statement                      shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5
    elif                           shift and go to state 6
    else                           shift and go to state 7
    comment                        shift and go to state 8

state 2

    (1) code -> line . NEWLINE

    NEWLINE         shift and go to state 17


state 3

    (3) line -> statement .

    NEWLINE         reduce using rule 3 (line -> statement .)


state 4

    (4) line -> while .

    NEWLINE         reduce using rule 4 (line -> while .)


state 5

    (5) line -> if .

    NEWLINE         reduce using rule 5 (line -> if .)


state 6

    (6) line -> elif .

    NEWLINE         reduce using rule 6 (line -> elif .)


state 7

    (7) line -> else .

    NEWLINE         reduce using rule 7 (line -> else .)


state 8

    (8) line -> comment .

    NEWLINE         reduce using rule 8 (line -> comment .)


state 9

    (9) line -> TAB . line
    (3) line -> . statement
    (4) line -> . while
    (5) line -> . if
    (6) line -> . elif
    (7) line -> . else
    (8) line -> . comment
    (9) line -> . TAB line
    (10) statement -> . ID EQUALS expression
    (30) while -> . WHILE expression COLON
    (31) if -> . IF expression COLON
    (32) elif -> . ELIF expression COLON
    (33) else -> . ELSE COLON
    (34) comment -> . COMMENT

    TAB             shift and go to state 9
    ID              shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ELIF            shift and go to state 13
    ELSE            shift and go to state 14
    COMMENT         shift and go to state 15

    line                           shift and go to state 18
    statement                      shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5
    elif                           shift and go to state 6
    else                           shift and go to state 7
    comment                        shift and go to state 8

state 10

    (10) statement -> ID . EQUALS expression

    EQUALS          shift and go to state 19


state 11

    (30) while -> WHILE . expression COLON
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 20

state 12

    (31) if -> IF . expression COLON
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 27

state 13

    (32) elif -> ELIF . expression COLON
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 28

state 14

    (33) else -> ELSE . COLON

    COLON           shift and go to state 29


state 15

    (34) comment -> COMMENT .

    NEWLINE         reduce using rule 34 (comment -> COMMENT .)


state 16

    (2) code -> code line . NEWLINE

    NEWLINE         shift and go to state 30


state 17

    (1) code -> line NEWLINE .

    TAB             reduce using rule 1 (code -> line NEWLINE .)
    ID              reduce using rule 1 (code -> line NEWLINE .)
    WHILE           reduce using rule 1 (code -> line NEWLINE .)
    IF              reduce using rule 1 (code -> line NEWLINE .)
    ELIF            reduce using rule 1 (code -> line NEWLINE .)
    ELSE            reduce using rule 1 (code -> line NEWLINE .)
    COMMENT         reduce using rule 1 (code -> line NEWLINE .)
    $end            reduce using rule 1 (code -> line NEWLINE .)


state 18

    (9) line -> TAB line .

    NEWLINE         reduce using rule 9 (line -> TAB line .)


state 19

    (10) statement -> ID EQUALS . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 31

state 20

    (30) while -> WHILE expression . COLON
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           shift and go to state 32
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37
    LT              shift and go to state 38
    GT              shift and go to state 39
    LE              shift and go to state 40
    GE              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45


state 21

    (11) expression -> ID .

    COLON           reduce using rule 11 (expression -> ID .)
    PLUS            reduce using rule 11 (expression -> ID .)
    MINUS           reduce using rule 11 (expression -> ID .)
    TIMES           reduce using rule 11 (expression -> ID .)
    DIVIDE          reduce using rule 11 (expression -> ID .)
    MODULO          reduce using rule 11 (expression -> ID .)
    LT              reduce using rule 11 (expression -> ID .)
    GT              reduce using rule 11 (expression -> ID .)
    LE              reduce using rule 11 (expression -> ID .)
    GE              reduce using rule 11 (expression -> ID .)
    EQ              reduce using rule 11 (expression -> ID .)
    NE              reduce using rule 11 (expression -> ID .)
    OR              reduce using rule 11 (expression -> ID .)
    AND             reduce using rule 11 (expression -> ID .)
    NEWLINE         reduce using rule 11 (expression -> ID .)
    RPAREN          reduce using rule 11 (expression -> ID .)


state 22

    (12) expression -> INTEGER_CONST .

    COLON           reduce using rule 12 (expression -> INTEGER_CONST .)
    PLUS            reduce using rule 12 (expression -> INTEGER_CONST .)
    MINUS           reduce using rule 12 (expression -> INTEGER_CONST .)
    TIMES           reduce using rule 12 (expression -> INTEGER_CONST .)
    DIVIDE          reduce using rule 12 (expression -> INTEGER_CONST .)
    MODULO          reduce using rule 12 (expression -> INTEGER_CONST .)
    LT              reduce using rule 12 (expression -> INTEGER_CONST .)
    GT              reduce using rule 12 (expression -> INTEGER_CONST .)
    LE              reduce using rule 12 (expression -> INTEGER_CONST .)
    GE              reduce using rule 12 (expression -> INTEGER_CONST .)
    EQ              reduce using rule 12 (expression -> INTEGER_CONST .)
    NE              reduce using rule 12 (expression -> INTEGER_CONST .)
    OR              reduce using rule 12 (expression -> INTEGER_CONST .)
    AND             reduce using rule 12 (expression -> INTEGER_CONST .)
    NEWLINE         reduce using rule 12 (expression -> INTEGER_CONST .)
    RPAREN          reduce using rule 12 (expression -> INTEGER_CONST .)


state 23

    (13) expression -> TRUE .

    COLON           reduce using rule 13 (expression -> TRUE .)
    PLUS            reduce using rule 13 (expression -> TRUE .)
    MINUS           reduce using rule 13 (expression -> TRUE .)
    TIMES           reduce using rule 13 (expression -> TRUE .)
    DIVIDE          reduce using rule 13 (expression -> TRUE .)
    MODULO          reduce using rule 13 (expression -> TRUE .)
    LT              reduce using rule 13 (expression -> TRUE .)
    GT              reduce using rule 13 (expression -> TRUE .)
    LE              reduce using rule 13 (expression -> TRUE .)
    GE              reduce using rule 13 (expression -> TRUE .)
    EQ              reduce using rule 13 (expression -> TRUE .)
    NE              reduce using rule 13 (expression -> TRUE .)
    OR              reduce using rule 13 (expression -> TRUE .)
    AND             reduce using rule 13 (expression -> TRUE .)
    NEWLINE         reduce using rule 13 (expression -> TRUE .)
    RPAREN          reduce using rule 13 (expression -> TRUE .)


state 24

    (14) expression -> FALSE .

    COLON           reduce using rule 14 (expression -> FALSE .)
    PLUS            reduce using rule 14 (expression -> FALSE .)
    MINUS           reduce using rule 14 (expression -> FALSE .)
    TIMES           reduce using rule 14 (expression -> FALSE .)
    DIVIDE          reduce using rule 14 (expression -> FALSE .)
    MODULO          reduce using rule 14 (expression -> FALSE .)
    LT              reduce using rule 14 (expression -> FALSE .)
    GT              reduce using rule 14 (expression -> FALSE .)
    LE              reduce using rule 14 (expression -> FALSE .)
    GE              reduce using rule 14 (expression -> FALSE .)
    EQ              reduce using rule 14 (expression -> FALSE .)
    NE              reduce using rule 14 (expression -> FALSE .)
    OR              reduce using rule 14 (expression -> FALSE .)
    AND             reduce using rule 14 (expression -> FALSE .)
    NEWLINE         reduce using rule 14 (expression -> FALSE .)
    RPAREN          reduce using rule 14 (expression -> FALSE .)


state 25

    (28) expression -> NOT . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 46

state 26

    (29) expression -> LPAREN . expression RPAREN
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 47

state 27

    (31) if -> IF expression . COLON
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           shift and go to state 48
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37
    LT              shift and go to state 38
    GT              shift and go to state 39
    LE              shift and go to state 40
    GE              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45


state 28

    (32) elif -> ELIF expression . COLON
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           shift and go to state 49
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37
    LT              shift and go to state 38
    GT              shift and go to state 39
    LE              shift and go to state 40
    GE              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45


state 29

    (33) else -> ELSE COLON .

    NEWLINE         reduce using rule 33 (else -> ELSE COLON .)


state 30

    (2) code -> code line NEWLINE .

    TAB             reduce using rule 2 (code -> code line NEWLINE .)
    ID              reduce using rule 2 (code -> code line NEWLINE .)
    WHILE           reduce using rule 2 (code -> code line NEWLINE .)
    IF              reduce using rule 2 (code -> code line NEWLINE .)
    ELIF            reduce using rule 2 (code -> code line NEWLINE .)
    ELSE            reduce using rule 2 (code -> code line NEWLINE .)
    COMMENT         reduce using rule 2 (code -> code line NEWLINE .)
    $end            reduce using rule 2 (code -> code line NEWLINE .)


state 31

    (10) statement -> ID EQUALS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    NEWLINE         reduce using rule 10 (statement -> ID EQUALS expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37
    LT              shift and go to state 38
    GT              shift and go to state 39
    LE              shift and go to state 40
    GE              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45


state 32

    (30) while -> WHILE expression COLON .

    NEWLINE         reduce using rule 30 (while -> WHILE expression COLON .)


state 33

    (15) expression -> expression PLUS . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 50

state 34

    (16) expression -> expression MINUS . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 51

state 35

    (17) expression -> expression TIMES . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 52

state 36

    (18) expression -> expression DIVIDE . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 53

state 37

    (19) expression -> expression MODULO . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 54

state 38

    (20) expression -> expression LT . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 55

state 39

    (21) expression -> expression GT . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 56

state 40

    (22) expression -> expression LE . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 57

state 41

    (23) expression -> expression GE . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 58

state 42

    (24) expression -> expression EQ . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 59

state 43

    (25) expression -> expression NE . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 60

state 44

    (26) expression -> expression OR . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 61

state 45

    (27) expression -> expression AND . expression
    (11) expression -> . ID
    (12) expression -> . INTEGER_CONST
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MODULO expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression AND expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN

    ID              shift and go to state 21
    INTEGER_CONST   shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LPAREN          shift and go to state 26

    expression                     shift and go to state 62

state 46

    (28) expression -> NOT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 28 (expression -> NOT expression .)
    OR              reduce using rule 28 (expression -> NOT expression .)
    AND             reduce using rule 28 (expression -> NOT expression .)
    NEWLINE         reduce using rule 28 (expression -> NOT expression .)
    RPAREN          reduce using rule 28 (expression -> NOT expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37
    LT              shift and go to state 38
    GT              shift and go to state 39
    LE              shift and go to state 40
    GE              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43

  ! PLUS            [ reduce using rule 28 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> NOT expression .) ]
  ! MODULO          [ reduce using rule 28 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 28 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 28 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 28 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 28 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> NOT expression .) ]
  ! NE              [ reduce using rule 28 (expression -> NOT expression .) ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 47

    (29) expression -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    RPAREN          shift and go to state 63
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37
    LT              shift and go to state 38
    GT              shift and go to state 39
    LE              shift and go to state 40
    GE              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45


state 48

    (31) if -> IF expression COLON .

    NEWLINE         reduce using rule 31 (if -> IF expression COLON .)


state 49

    (32) elif -> ELIF expression COLON .

    NEWLINE         reduce using rule 32 (elif -> ELIF expression COLON .)


state 50

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 15 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    LT              reduce using rule 15 (expression -> expression PLUS expression .)
    GT              reduce using rule 15 (expression -> expression PLUS expression .)
    LE              reduce using rule 15 (expression -> expression PLUS expression .)
    GE              reduce using rule 15 (expression -> expression PLUS expression .)
    EQ              reduce using rule 15 (expression -> expression PLUS expression .)
    NE              reduce using rule 15 (expression -> expression PLUS expression .)
    OR              reduce using rule 15 (expression -> expression PLUS expression .)
    AND             reduce using rule 15 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 15 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37

  ! TIMES           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 51

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 16 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    LT              reduce using rule 16 (expression -> expression MINUS expression .)
    GT              reduce using rule 16 (expression -> expression MINUS expression .)
    LE              reduce using rule 16 (expression -> expression MINUS expression .)
    GE              reduce using rule 16 (expression -> expression MINUS expression .)
    EQ              reduce using rule 16 (expression -> expression MINUS expression .)
    NE              reduce using rule 16 (expression -> expression MINUS expression .)
    OR              reduce using rule 16 (expression -> expression MINUS expression .)
    AND             reduce using rule 16 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 16 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37

  ! TIMES           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 52

    (17) expression -> expression TIMES expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 17 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 17 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 17 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 17 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 17 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 17 (expression -> expression TIMES expression .)
    LT              reduce using rule 17 (expression -> expression TIMES expression .)
    GT              reduce using rule 17 (expression -> expression TIMES expression .)
    LE              reduce using rule 17 (expression -> expression TIMES expression .)
    GE              reduce using rule 17 (expression -> expression TIMES expression .)
    EQ              reduce using rule 17 (expression -> expression TIMES expression .)
    NE              reduce using rule 17 (expression -> expression TIMES expression .)
    OR              reduce using rule 17 (expression -> expression TIMES expression .)
    AND             reduce using rule 17 (expression -> expression TIMES expression .)
    NEWLINE         reduce using rule 17 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 17 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 53

    (18) expression -> expression DIVIDE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 18 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 18 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 18 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 18 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 18 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 18 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 18 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 18 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 18 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 18 (expression -> expression DIVIDE expression .)
    NEWLINE         reduce using rule 18 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 54

    (19) expression -> expression MODULO expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 19 (expression -> expression MODULO expression .)
    PLUS            reduce using rule 19 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 19 (expression -> expression MODULO expression .)
    TIMES           reduce using rule 19 (expression -> expression MODULO expression .)
    DIVIDE          reduce using rule 19 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 19 (expression -> expression MODULO expression .)
    LT              reduce using rule 19 (expression -> expression MODULO expression .)
    GT              reduce using rule 19 (expression -> expression MODULO expression .)
    LE              reduce using rule 19 (expression -> expression MODULO expression .)
    GE              reduce using rule 19 (expression -> expression MODULO expression .)
    EQ              reduce using rule 19 (expression -> expression MODULO expression .)
    NE              reduce using rule 19 (expression -> expression MODULO expression .)
    OR              reduce using rule 19 (expression -> expression MODULO expression .)
    AND             reduce using rule 19 (expression -> expression MODULO expression .)
    NEWLINE         reduce using rule 19 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 19 (expression -> expression MODULO expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 55

    (20) expression -> expression LT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 20 (expression -> expression LT expression .)
    LT              reduce using rule 20 (expression -> expression LT expression .)
    GT              reduce using rule 20 (expression -> expression LT expression .)
    LE              reduce using rule 20 (expression -> expression LT expression .)
    GE              reduce using rule 20 (expression -> expression LT expression .)
    EQ              reduce using rule 20 (expression -> expression LT expression .)
    NE              reduce using rule 20 (expression -> expression LT expression .)
    OR              reduce using rule 20 (expression -> expression LT expression .)
    AND             reduce using rule 20 (expression -> expression LT expression .)
    NEWLINE         reduce using rule 20 (expression -> expression LT expression .)
    RPAREN          reduce using rule 20 (expression -> expression LT expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37

  ! PLUS            [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! MODULO          [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 56

    (21) expression -> expression GT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 21 (expression -> expression GT expression .)
    LT              reduce using rule 21 (expression -> expression GT expression .)
    GT              reduce using rule 21 (expression -> expression GT expression .)
    LE              reduce using rule 21 (expression -> expression GT expression .)
    GE              reduce using rule 21 (expression -> expression GT expression .)
    EQ              reduce using rule 21 (expression -> expression GT expression .)
    NE              reduce using rule 21 (expression -> expression GT expression .)
    OR              reduce using rule 21 (expression -> expression GT expression .)
    AND             reduce using rule 21 (expression -> expression GT expression .)
    NEWLINE         reduce using rule 21 (expression -> expression GT expression .)
    RPAREN          reduce using rule 21 (expression -> expression GT expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37

  ! PLUS            [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! MODULO          [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 57

    (22) expression -> expression LE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 22 (expression -> expression LE expression .)
    LT              reduce using rule 22 (expression -> expression LE expression .)
    GT              reduce using rule 22 (expression -> expression LE expression .)
    LE              reduce using rule 22 (expression -> expression LE expression .)
    GE              reduce using rule 22 (expression -> expression LE expression .)
    EQ              reduce using rule 22 (expression -> expression LE expression .)
    NE              reduce using rule 22 (expression -> expression LE expression .)
    OR              reduce using rule 22 (expression -> expression LE expression .)
    AND             reduce using rule 22 (expression -> expression LE expression .)
    NEWLINE         reduce using rule 22 (expression -> expression LE expression .)
    RPAREN          reduce using rule 22 (expression -> expression LE expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37

  ! PLUS            [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! MODULO          [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 58

    (23) expression -> expression GE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 23 (expression -> expression GE expression .)
    LT              reduce using rule 23 (expression -> expression GE expression .)
    GT              reduce using rule 23 (expression -> expression GE expression .)
    LE              reduce using rule 23 (expression -> expression GE expression .)
    GE              reduce using rule 23 (expression -> expression GE expression .)
    EQ              reduce using rule 23 (expression -> expression GE expression .)
    NE              reduce using rule 23 (expression -> expression GE expression .)
    OR              reduce using rule 23 (expression -> expression GE expression .)
    AND             reduce using rule 23 (expression -> expression GE expression .)
    NEWLINE         reduce using rule 23 (expression -> expression GE expression .)
    RPAREN          reduce using rule 23 (expression -> expression GE expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37

  ! PLUS            [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! MODULO          [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 59

    (24) expression -> expression EQ expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 24 (expression -> expression EQ expression .)
    LT              reduce using rule 24 (expression -> expression EQ expression .)
    GT              reduce using rule 24 (expression -> expression EQ expression .)
    LE              reduce using rule 24 (expression -> expression EQ expression .)
    GE              reduce using rule 24 (expression -> expression EQ expression .)
    EQ              reduce using rule 24 (expression -> expression EQ expression .)
    NE              reduce using rule 24 (expression -> expression EQ expression .)
    OR              reduce using rule 24 (expression -> expression EQ expression .)
    AND             reduce using rule 24 (expression -> expression EQ expression .)
    NEWLINE         reduce using rule 24 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 24 (expression -> expression EQ expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37

  ! PLUS            [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! MODULO          [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 60

    (25) expression -> expression NE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 25 (expression -> expression NE expression .)
    LT              reduce using rule 25 (expression -> expression NE expression .)
    GT              reduce using rule 25 (expression -> expression NE expression .)
    LE              reduce using rule 25 (expression -> expression NE expression .)
    GE              reduce using rule 25 (expression -> expression NE expression .)
    EQ              reduce using rule 25 (expression -> expression NE expression .)
    NE              reduce using rule 25 (expression -> expression NE expression .)
    OR              reduce using rule 25 (expression -> expression NE expression .)
    AND             reduce using rule 25 (expression -> expression NE expression .)
    NEWLINE         reduce using rule 25 (expression -> expression NE expression .)
    RPAREN          reduce using rule 25 (expression -> expression NE expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37

  ! PLUS            [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! LT              [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 61

    (26) expression -> expression OR expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 26 (expression -> expression OR expression .)
    OR              reduce using rule 26 (expression -> expression OR expression .)
    NEWLINE         reduce using rule 26 (expression -> expression OR expression .)
    RPAREN          reduce using rule 26 (expression -> expression OR expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37
    LT              shift and go to state 38
    GT              shift and go to state 39
    LE              shift and go to state 40
    GE              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    AND             shift and go to state 45

  ! PLUS            [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 44 ]


state 62

    (27) expression -> expression AND expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MODULO expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . AND expression

    COLON           reduce using rule 27 (expression -> expression AND expression .)
    OR              reduce using rule 27 (expression -> expression AND expression .)
    AND             reduce using rule 27 (expression -> expression AND expression .)
    NEWLINE         reduce using rule 27 (expression -> expression AND expression .)
    RPAREN          reduce using rule 27 (expression -> expression AND expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 37
    LT              shift and go to state 38
    GT              shift and go to state 39
    LE              shift and go to state 40
    GE              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43

  ! PLUS            [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]


state 63

    (29) expression -> LPAREN expression RPAREN .

    COLON           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (expression -> LPAREN expression RPAREN .)

